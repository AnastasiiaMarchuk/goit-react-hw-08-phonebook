{"version":3,"file":"static/js/781.07be8c1b.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","redux/hooks/UseContacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/AddingForm/AddingForm.styled.js","components/AddingForm/AddingForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/PhoneBook/PhoneBook.styled.js","pages/PhoneBook/PhoneBook.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectFilter,\n  selectIsLoading,\n} from '../contacts/selectors';\nimport { findContact } from '../contacts/FilterSlice';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from '../contacts/operations';\nimport { useCallback } from 'react';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  const getContacts = useCallback(() => dispatch(fetchContacts()), [dispatch]);\n  const addNewContact = contact => dispatch(addContact(contact));\n  const removeContact = contactId => dispatch(deleteContact(contactId));\n\n  return {\n    contacts,\n    addNewContact,\n    removeContact,\n    dispatch,\n    getContacts,\n    isLoading,\n    error,\n  };\n};\n\nexport const useFilter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const searchContact = searchName => dispatch(findContact(searchName));\n\n  return { filter, searchContact };\n};\n","import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n  label {\n    font-size: 28px;\n    font-weight: 600;\n    color: #ffffff;\n  }\n  input {\n    margin-top: 12px;\n    margin-bottom: 20px;\n    font-size: 20px;\n    width: 100%;\n    height: 40px;\n    border-radius: 5px;\n    padding-right: 40px;\n    &::placeholder {\n      color: #0d2146;\n      font-style: italic;\n    }\n  }\n  button {\n    position: absolute;\n    top: 50%;\n    right: 5px;\n    margin-top: 13px;\n    transform: translateY(-50%);\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n`;\n","import { useFilter } from 'redux/hooks/UseContacts';\nimport { Wrapper } from './Filter.styled';\nimport { MdOutlineClear } from 'react-icons/md';\n\nexport const Filter = () => {\n  const { searchContact, filter } = useFilter();\n\n  const onInput = event => {\n    const searchName = event.target.value.toLowerCase();\n    searchContact(searchName);\n  };\n\n  const clearInput = () => {\n    searchContact('');\n  };\n\n  return (\n    <Wrapper>\n      <label>\n        Find contact by name\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={onInput}\n          placeholder={'search'}\n        />\n        <button onClick={clearInput}>\n          <MdOutlineClear size={21} color=\"#0D2146\" />\n        </button>\n      </label>\n    </Wrapper>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Title = styled.p`\n  font-size: 28px;\n  font-weight: 600;\n  color: #ffffff;\n  margin-bottom: 16px;\n  margin-top: 10px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  label {\n    font-size: 20px;\n    font-weight: 400;\n    color: #ffffff;\n    margin-bottom: 8px;\n  }\n  input {\n    margin-bottom: 8px;\n    margin-top: 4px;\n    font-size: 20px;\n    width: 100%;\n    height: 40px;\n    border-radius: 5px;\n    &::placeholder {\n      color: #0d2146;\n      font-style: italic;\n    }\n  }\n  button {\n    width: 100%;\n    background-color: #475a8a;\n    font-size: 24px;\n    border-radius: 5px;\n    color: #ffffff;\n    margin-top: 24px;\n    cursor: pointer;\n    height: 40px;\n    border: none;\n    &:hover {\n      box-shadow: 0px 0px 5px 2px rgba(255, 255, 255, 1);\n    }\n  }\n  span {\n    font-size: 16px;\n    color: #dbd7d2;\n    font-style: italic;\n  }\n`;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useContacts } from 'redux/hooks/UseContacts';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { Form, Title } from './AddingForm.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst schema = yup\n  .object({\n    name: yup\n      .string()\n      .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/)\n      .required(),\n    number: yup\n      .string()\n      .matches(/^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){10,14}(\\s*)?$/)\n      .required(),\n  })\n  .required();\n\nexport default function AddingForm() {\n  const { addNewContact, contacts } = useContacts();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = newContact => {\n    const oldContact = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === newContact.name.toLowerCase() ||\n        contact.number === newContact.number\n    );\n\n    if (oldContact) {\n      toast.error(`${oldContact.name} already exists`, {\n        autoClose: 2000,\n      });\n      return;\n    }\n\n    const contact = { ...newContact };\n    addNewContact(contact);\n\n    toast.success('Contact added successfully', {\n      position: 'top-right',\n      autoClose: 2000,\n    });\n    reset();\n  };\n\n  return (\n    <>\n      <Title>Add new contact</Title>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <label>\n          Name\n          <input {...register('name')} placeholder=\"Enter name\" />\n          {errors.name && <span>Name is required</span>}\n        </label>\n        <label>\n          Number\n          <input {...register('number')} placeholder=\"xxx-xxx-xx-xx\" />\n          {errors.number && <span>Number is required</span>}\n        </label>\n        <button type=\"submit\">Add contact</button>\n        <ToastContainer />\n      </Form>\n    </>\n  );\n}\n","import { styled } from 'styled-components';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  margin-top: 16px;\n  li {\n    display: flex;\n    font-size: 20px;\n    font-weight: 400;\n    color: #ffffff;\n    margin-bottom: 8px;\n    width: 100%;\n    gap: 10px;\n  }\n\n  p {\n    width: 300px;\n    font-weight: 600;\n    margin-right: 10px;\n  }\n\n  span {\n    width: 300px;\n    font-weight: 500;\n  }\n  button {\n    background-color: transparent;\n    color: #ffffff;\n    border: none;\n    cursor: pointer;\n  }\n`;\n\nexport const TitlesWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 6px 0;\n  p {\n    width: 100%;\n    font-size: 24px;\n    font-weight: 600;\n    color: #ffffff;\n    margin: 0;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 2px;\n  background-color: rgba(255, 255, 255, 0.3);\n`;\n\nexport const Message = styled.p`\n  margin-top: 36px;\n  font-size: 18px;\n  color: #dbd7d2;\n  font-style: italic;\n`;\n","import { FiTrash } from 'react-icons/fi';\nimport { BsPersonCircle } from 'react-icons/bs';\nimport { List, Message, TitlesWrapper, Wrapper } from './ContactList.styled';\nimport { useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { useContacts, useFilter } from 'redux/hooks/UseContacts';\n\nexport const ContactList = () => {\n  const { removeContact, contacts, getContacts, isLoading, error } =\n    useContacts();\n  const { filter } = useFilter();\n\n  useEffect(() => {\n    getContacts();\n  }, [getContacts]);\n\n  const onRemoveContact = contactId => {\n    removeContact(contactId);\n  };\n\n  const newList = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter)\n  );\n\n  const noContactsMessage = filter\n    ? 'No contact with this name'\n    : \"There are no entries in your phone book yet. It's time to add your first contact\";\n\n  return (\n    <>\n      <Wrapper />\n      <TitlesWrapper>\n        <p>Name</p>\n        <p>Number</p>\n      </TitlesWrapper>\n      <Wrapper />\n      {isLoading && !error && <Loader />}\n      {newList.length > 0 && (\n        <List>\n          {newList.map(contact => {\n            return (\n              <li key={contact.id}>\n                <BsPersonCircle size={21} color=\"#fff\" />\n                <p>{contact.name}</p>\n                <span>{contact.number}</span>\n                <button onClick={() => onRemoveContact(contact.id)}>\n                  <FiTrash size={21} />\n                </button>\n              </li>\n            );\n          })}\n        </List>\n      )}\n      {!isLoading && !newList.length && <Message>{noContactsMessage}</Message>}\n    </>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const Section = styled.section`\n  background-color: rgba(13, 33, 70, 0.7);\n  backdrop-filter: blur(5.1px);\n  -webkit-backdrop-filter: blur(5.1px);\n  color: rgba(13, 33, 70, 0.8);\n  width: 1200px;\n  margin: 50px auto 0;\n  border-radius: 8px;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  h1 {\n    color: #fff;\n    padding: 18px 6px 18px 18px;\n    margin: 0;\n  }\n`;\n\nexport const SearchSection = styled.div`\n  display: flex;\n  gap: 30px;\n`;\n\nexport const Container = styled.div`\n  width: 600px;\n  padding: 30px;\n`;\n\nexport const ContactsSection = styled.section`\n  width: 100%;\n  padding: 10px 30px;\n  h2 {\n    font-size: 28px;\n    font-weight: 600;\n    color: #ffffff;\n    margin: 20px 0 10px;\n  }\n`;\n","import { Filter } from 'components/Filter/Filter';\nimport AddingForm from 'components/AddingForm/AddingForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { RiContactsBookLine } from 'react-icons/ri';\nimport {\n  ContactsSection,\n  Container,\n  SearchSection,\n  Section,\n  TitleWrapper,\n} from './PhoneBook.styled';\n\nconst PhoneBook = () => {\n  return (\n    <Section>\n      <TitleWrapper>\n        <h1>Phonebook</h1> <RiContactsBookLine size={40} color=\"#fff\" />\n      </TitleWrapper>\n      <SearchSection>\n        <Container>\n          <Filter />\n          <AddingForm />/\n        </Container>\n        <ContactsSection>\n          <h2>Contacts</h2>\n          <ContactList />\n        </ContactsSection>\n      </SearchSection>\n    </Section>\n  );\n};\n\nexport default PhoneBook;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","useContacts","useSelector","dispatch","useDispatch","getContacts","useCallback","fetchContacts","addNewContact","contact","addContact","removeContact","contactId","deleteContact","useFilter","searchContact","searchName","findContact","Wrapper","styled","_templateObject","_taggedTemplateLiteral","Filter","_useFilter","_jsx","children","_jsxs","type","value","onChange","event","target","toLowerCase","placeholder","onClick","MdOutlineClear","size","color","Title","Form","_templateObject2","schema","yup","name","matches","required","number","AddingForm","_useContacts","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","reset","_Fragment","onSubmit","newContact","oldContact","find","toast","concat","autoClose","_objectSpread","position","ToastContainer","List","TitlesWrapper","_templateObject3","Message","_templateObject4","ContactList","useEffect","newList","includes","noContactsMessage","Loader","length","map","BsPersonCircle","id","FiTrash","Section","TitleWrapper","SearchSection","Container","ContactsSection","_templateObject5","RiContactsBookLine"],"sourceRoot":""}